set nocompatible
filetype off

highlight Normal ctermfg=grey ctermbg=black
syntax on

"plugins
call plug#begin('~/.vim/bundle')

Plug 'sjl/gundo.vim'
Plug 'altercation/vim-colors-solarized'
Plug 'chrisbra/Recover.vim'
Plug 'davidhalter/jedi-vim', {'for': 'python'}
Plug 'ervandew/supertab'
Plug 'godlygeek/tabular'
Plug 'vim-syntastic/syntastic'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/nerdcommenter'
Plug 'ntpeters/vim-better-whitespace'
Plug 'Valloric/YouCompleteMe', {'for': 'cpp'}
Plug 'lervag/vimtex'

call plug#end()
filetype plugin indent on

set background=dark
let g:solarized_termcolors=256
let g:solarized_contrast="high"
let g:solarized_visibility="high"
colorscheme solarized
set autoread
set encoding=utf-8
set mouse=a
set cursorline

"show a undo tree
map <S-U> :GundoToggle<CR>
let g:gundo_right = 1

"tab management
set showtabline=2
nmap tc :tabnew<CR>
nmap tn :tabnext<CR>
nmap tf :tabfirst<CR>
nmap tp :tabprevious<CR>
nmap to :tabnew<CR>:NERDTree<CR>

"split screen
nmap tv :vsplit<CR>
nmap th :split<CR>
nmap tt <C-w><C-w>

"F7 toggles NERDTree
nmap <F7> :NERDTreeToggle<CR>

set statusline=%t
set statusline+=[%{strlen(&fenc)?&fenc:'none'}, "file encoding
set statusline+=%{&ff}] "file format
set statusline+=%h      "help file flag
set statusline+=%m      "modified flag
set statusline+=%r      "read only flag
set statusline+=%y      "filetype
"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%=      "left/right separator
set statusline+=%c,     "cursor column
set statusline+=%l/%L   "cursor line/total lines
set statusline+=\ %P    "percent through file

"let g:ycm_register_as_syntastic_checker = 0
"let g:ycm_show_diagnostics_ui = 0
let g:ycm_add_preview_to_completeopt = 1
let g:ycm_autoclose_preview_window_after_completion=1

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_cpp_compiler = 'g++'
let g:syntastic_cpp_compiler_options ='-std=c++11'
let g:syntastic_cpp_check_header = 0
let g:syntastic_cpp_include_dirs = ['/home/flo/Development/robotics15/src']
let g:syntastic_quiet_messages = { "regex": ['missing `\ '] }

let g:NERDTreeQuitOnOpen = 1

let g:vimtex_view_general_viewer = 'qpdfview'
let g:vimtex_view_general_options
            \ = '--unique @pdf\#src:@tex:@line:@col'
let g:vimtex_view_general_options_latexmk = '--unique'
let g:vimtex_latexmk_continuous = 0

let g:tex_flavor = "latex"

set tabstop=4
set shiftwidth=4
set expandtab

"leader
let mapleader=","
let maplocalleader = "\\"

set scrolloff=4
set laststatus=2

set number
set relativenumber
autocmd InsertEnter * :set number
autocmd InsertEnter * :set norelativenumber
autocmd InsertLeave * :set relativenumber

if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
endif
